
.container#settings
  .row
    .col-lg-12
      %h1
        %i.bi.bi-gear-fill
        Settings

  .row
    .col-lg-12
      .admin-nav
        %nav
          %ul.nav.justify-content-end
            %li.nav-item
              = link_to edit_admin_setting_path(setting) do
                %i.bi.bi-pencil-fill.icon
                EDIT
  .row
    .col-lg-2
      = render 'menu'

    .col-lg-10
      .row
        .col-lg-10
          .section
            .row
              .col-lg-4
                %h3#reservation-settings Reservations
              .col-lg-8
                .table-responsive
                  %table.table.settings.table-borderless#stats-table
                    %tr
                      %th
                        Reservations
                      %td
                        - if setting.is_reservations_open
                          Open

                          = button_to "Close", admin_setting_path(setting, setting: {is_reservations_open: false}), method: :patch, class: 'btn btn-danger btn-sm', disabled: current_user.administrator? ? false : true
                        - else
                          Closed
                          = button_to "Open", admin_setting_path(setting, setting: {is_reservations_open: true}), method: :patch, class: 'btn btn-danger btn-sm', disabled: current_user.administrator? ? false : true

                    %tr
                      %th Reservations closed message
                      %td= setting.reservations_closed_message

      .row
        .col-lg-10
          .section
            .row
              .col-lg-4
                %h3#details Event details
              .col-lg-8
                .table-responsive
                  %table.table.settings
                    %tbody
                      %tr
                        %th
                          Pick-up date start/end time

                        %td
                          = nice_date_time(Time.parse(EVENT_DATE_AND_PICKUP_TIME))
                          %br
                          = nice_date_time(Time.parse(EVENT_DATE_AND_PICKUP_END_TIME))
                      %tr
                        %th Signup deadline
                        %td= nice_date_time_no_year(Time.parse(EVENT_SIGN_UP_DEADLINE))

      .row
        .col-lg-10
          .section
            .row
              .col-lg-4
                %h3#content Website
              .col-lg-8
                .table-responsive
                  %table.table.settings
                    %tbody
                      %tr
                        %th Site title
                        %td= SITE_TITLE
                      %tr
                        %th Site description
                        %td= setting.site_description
                      %tr
                        %th Organization name
                        %td= ORGANIZATION_NAME
                      %tr
                        %th Description
                        %td= setting.description
                      %tr
                        %th Day of pickup instructions
                        %td= setting.on_day_of_pickup_instructions
                      %tr
                        %th Is Remind Mes enabled?
                        %td
                          - if setting.is_remind_mes_enabled?
                            %i.bi.bi-check-lg
                          - else
                            %i.bi.bi-x-lg

      .row
        .col-lg-10
          .section
            .row
              .col-lg-4
                %h3#mapping Mapping
              .col-lg-8
                .table-responsive
                  %table.table.settings
                    %tr
                      %th Lookup service
                      %td.text-end
                        = Geocoder.config[:lookup].to_s.humanize


      .row
        .col-lg-10
          .section
            .row
              .col-lg-4
                %h3#driver Driver
              .col-lg-8
                .table-responsive
                  %table.table.table-borderless.settings
                    %tbody
                      %tr
                        %th
                        %td= link_to "Drivers", admin_drivers_path
                      %tr 
                        %th Is Driver Site enabled?
                        %td
                          - if setting.is_driver_site_enabled?
                            = link_to admin_setting_path(setting, setting: { is_driver_site_enabled: false } ), method: :patch, data: { 'turbo-method': 'patch' } do 
                              %i.bi.bi-check2-square
                          - else
                            = link_to admin_setting_path(setting, setting: { is_driver_site_enabled: true } ), method: :patch, data: { 'turbo-method': 'patch' } do 
                              %i.bi.bi-square

                      %tr
                        %th Driver Secret Key
                        %td
                          - if setting.driver_secret_key.present?
                            = setting.driver_secret_key
                          - else
                            No key

                      %tr 
                        %th Instructions
                        %td= setting&.driver_instructions&.html_safe


      .row
        .col-lg-10
          .section
            .row
              .col-lg-4
                %h3#contact Contact
              .col-lg-8
                .table-responsive
                  %table.table.table-borderless.settings

                    %tbody

                      %tr
                        %th Contact name
                        %td= setting.contact_name
                      %tr
                        %th Contact email
                        %td= setting.contact_email
                      %tr
                        %th Contact phone
                        %td= setting.contact_phone
                      %tr
                        %th
                          Email delivery

                        %td
                          - if setting.is_emailing_enabled
                            Delivering
                            - if current_user.administrator?
                              = button_to "Stop", admin_setting_path(setting, setting: {is_emailing_enabled: false}), method: :patch, class: 'btn btn-danger btn-sm'
                          - else
                            Stopped
                            - if current_user.administrator?
                              = button_to "Start", admin_setting_path(setting, setting: {is_emailing_enabled: true}), method: :patch, class: 'btn btn-danger btn-sm'

                      %tr
                        %th
                          SMS from phone
                        %td 
                          = Rails.application.credentials.twilio.production.number

                      %tr
                        %th
                          Email batch size
                        %td
                          = setting.email_batch_quantity



      .row
        .col-lg-10
          .section
            .row
              .col-lg-4
                %h3#seo SEO
              .col-lg-8
                .table-responsive
                  %table.table.settings
                    %tr
                      %th Meta Title
                      %td.text-end
                        = setting.meta_title
                    %tr
                      %th Meta Site Name
                      %td.text-end
                        = setting.meta_site_name
                    %tr
                      %th Meta Description
                      %td.text-end
                        = setting.meta_description
                    %tr
                      %th Meta Image filename
                      %td.text-end
                        = setting.meta_image_filename
                    %tr
                      %th Facebook Page ID
                      %td.text-end
                        = setting.facebook_page_id


      .row
        .col-lg-10
          .section
            .row
              .col-lg-4
                %h3#messaging Messaging
              .col-lg-8
                %div.mb-5
                  - if setting.is_emailing_enabled
                    .row.mb-1
                      .col-lg-5
                        .fw-bold Email is delivering
                      .col-lg-4
                        - if current_user.administrator?
                          .text-end
                            = button_to "Stop", admin_setting_path(setting, setting: {is_emailing_enabled: false}, source: 'marketing'), method: :patch, class: 'btn btn-sm btn-danger'
                  - else
                    .row.mb-1
                      .col-lg-5
                        .fw-bold Email is stopped
                      .col-lg-4
                        - if current_user.administrator?
                          .text-end
                            = button_to "Start", admin_setting_path(setting, setting: {is_emailing_enabled: true}, source: 'marketing'), method: :patch, class: 'btn btn-sm btn-danger'


                  .row
                    %p * This controls all automated email sending, except for donation receipts.



                %div.mb-7
                  - if setting.is_sms_enabled
                    .row.mb-1
                      .col-lg-5
                        .fw-bold SMS is delivering
                      .col-lg-4
                        - if current_user.administrator?
                          .text-end
                            = button_to "Stop", admin_setting_path(setting, setting: {is_sms_enabled: false}, source: 'marketing'), method: :patch, class: 'btn btn-sm btn-danger'
                  - else
                    .row.mb-1
                      .col-lg-5
                        .fw-bold SMS sending stopped
                      .col-lg-4
                        - if current_user.administrator?
                          .text-end
                            = button_to "Start", admin_setting_path(setting, setting: {is_sms_enabled: true}, source: 'marketing'), method: :patch, class: 'btn btn-sm btn-danger'

                  .row
                    %p * This controls automated sending of SMS's. This does not stop manual sending.
