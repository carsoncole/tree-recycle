.container#reservations
  .row
    .col-lg-12
      %h1
        %i.bi.bi-house-fill
        Reservations
        - if params[:route_id]
          \-
          = Route.find(params[:route_id]).name

  .row
    .col-lg-2
      - unless action_name == 'search'
        %section.menu#status-menu
          %h3 Status
          = link_to "All", admin_reservations_path(live: true), class: 'link'
          %br
          = link_to "Pending pickup", admin_reservations_path(pending_pickup: true), class: 'link'
          = surround("(",")") do 
            = @count_pending_pickups
          %br
          = link_to "Picked up", admin_reservations_path(picked_up: true), class: 'link'
          = surround("(",")") do 
            = @count_picked_up
          %br
          = link_to "Missing", admin_reservations_path(missing: true), class: 'link'
          = surround("(",")") do 
            = @count_missing
          %br
          = link_to "Cancelled", admin_reservations_path(cancelled: true), class: 'link'
          = surround("(",")") do 
            = @count_cancelled
          %br
          = link_to "Unconfirmed", admin_reservations_path(unconfirmed: true), class: 'link'
          = surround("(",")") do 
            = @count_unconfirmed
          %br
          = link_to "Archived", admin_reservations_path(archived: true), class: 'link'
          = surround("(",")") do 
            = @count_archived
          %br
          = link_to "Un-Routed", admin_reservations_path(unrouted: true), class: 'link'
          = surround("(",")") do 
            = @count_not_routed
          %br
          = link_to "Manually Geocoded", admin_reservations_path(geocoded: false), class: 'link'
          = surround("(",")") do 
            = @count_not_geocoded
          %br
          = link_to "Manually Routed", admin_reservations_path(is_routed: false), class: 'link'
          = surround("(",")") do 
            = @count_is_not_routed
          %br
          = link_to "Not Polygon Routed", admin_reservations_path(not_polygon_routed: true), class: 'link'
          = surround("(",")") do 
            = @count_not_polygon_routed
          %br
          = link_to "Duplicates", admin_reservations_path(duplicate: true), class: 'link'
          = surround("(",")") do
            = @count_duplicate
          %br
          = link_to "Remind Mes", admin_reservations_path(remind_me: true), class: 'link'
          = surround("(",")") do
            = @count_remind_me


        %section.menu
          %h3 Routes
          - Route.all.each do |route|
            = link_to route.name, admin_reservations_path(route_id: route.id), class: 'link'
            = surround("(",")") do 
              = Reservation.where.not(status: ['archived', 'cancelled']).where(route: route).count
            %br

        %section.menu
          %h3 Zones
          - Zone.all.each do |zone|
            = link_to zone.name, admin_zone_path(zone)
            = surround("(", ")") do 
              = Reservation.not_archived.joins(:route).where("routes.zone_id = ?",zone.id).count
            %br

    .col-lg-10
      .row
        .col-lg-8
          = render 'search'
        .col-lg-4
          - if current_user.editor? || current_user.administrator?
            .admin-nav
              %nav
                %ul.nav.justify-content-end
                  %li.nav-item
                    = link_to new_reservation_path, class: 'nav-link' do
                      %i.bi.bi-plus-lg
                      Reservation
                  %li.nav-item
                    = button_to admin_process_all_routes_path, class: 'btn btn-warning btn-sm', data: {  turbo_confirm: 'Are you sure? This will re-route ALL reservations that have auto-routing enabled.'} do
                      %i.bi.bi-lightning-fill
                      Process routes


      .pagination= pagy_bootstrap_nav(@pagy, pagy_id: 'pagination').html_safe

      - if params[:duplicate].present?
        %p.my-3.font-bold ** Duplicates are reservatioins with exact latitude/longitude matches. In addition to reservations that have been made more than once, this will also exist for multi-tenant properies where more than one resident has signed up. It is recommened that reservations be reviewed, and duplicates are deleted.

      .table-responsive-xxl
        %table.table#reservations-table
          %thead
            %tr
              %th Name
              %th
              %th Street
              %th Route
              %th
          %tbody#reservations-table-body
            - if params[:missing]
              = turbo_stream_from "missing_reservations" 
            - elsif params[:picked_up]
              = turbo_stream_from "picked_up_reservations"
            - elsif params[:live]
              = turbo_stream_from "reservation-status-changes"
            = render partial: 'reservation', collection: @reservations

      .pagination= pagy_bootstrap_nav(@pagy, pagy_id: 'pagination').html_safe
